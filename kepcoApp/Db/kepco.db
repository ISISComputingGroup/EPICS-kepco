record(bo, "$(P)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
	field(VAL, "$(RECSIM=0)")
}

record(bo, "$(P)DISABLE") 
{
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "$(DISABLE=0)")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}

record(stringin, "$(P)IDN")
{
    field(DESC, "SCPI identification string")
    field(DTYP, "stream")
    field(INP,  "@kepco.proto getIDN $(PORT)")
    field(PINI, "YES")
    field(FLNK, "$(P)REMOTE")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:IDN")
    field(SDIS, "$(P)DISABLE")
}

record(stringin, "$(P)RST")
{
    field(DESC, "Reset the power supply")
    field(DTYP, "stream")
    field(INP,  "@kepco.proto RST $(PORT)")
    field(PINI, "$(RESET=NO)")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:RST")
    field(SDIS, "$(P)DISABLE")
} 

record(stringin, "$(P)RSTRSND") {
    field(DESC, "Reset and resend params to power supply")
    field(DTYP, "stream")
    field(INP, "@kepco.proto resetWait($(P)) $(PORT) ")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:RSTRSND")
    field(SDIS, "$(P)DISABLE")
}

record(calcout, "$(P)RSTRSND:ON_START") {
    field(DESC, "Trigger RSTRSND on start")
    field(PINI, "YES")
    field(INPA, "$(ON_START)")
    field(CALC, "A == 1")
    field(OOPT, "When Non-zero")
    field(OUT, "$(P)RSTRSND")
}

record(calcout, "$(P)REM:ON_START") {
    field(DESC, "Trigger REMOTE on start")
    field(PINI, "YES")
    field(INPA, "$(ON_START)")
    field(CALC, "A == 2")
    field(OOPT, "When Non-zero")
    field(OUT, "$(P)REMOTE")
}


record(bo, "$(P)REMOTE") 
{
    #Must be put into remote or reset before PSU related commands sent
    field(DESC, "Put the unit into remote mode")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@kepco.proto setRemote $(PORT)")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(VAL, "1")
    field(PINI, "$(P)REM:AVAILABLE")
    field(FLNK, "$(P)REMOTE:GET")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:REMOTE")
    field(SDIS, "$(P)DISABLE")
}

record(ai, "$(P)CURRENT") 
{
    field(DESC, "Current")
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@kepco.proto readActualCurrent $(PORT)")
    field(PREC, "3")
    field(EGU,  "A")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:CURRENT")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "5.0 VAL")
}

# Scan from here allows us to FLNK to readback if we need to trigger
# an extra update. These extra updates are only triggered in recsim mode - in normal mode we push
# an update from the protocol file whenever a new SP is sent.
record(bo, "$(P)CURRENT:SP:RBV:_SCAN") 
{
    field(SCAN, "1 second")
    field(FLNK, "$(P)CURRENT:SP:RBV")
}

record(ai, "$(P)CURRENT:SP:RBV") 
{
    field(DESC, "Current Setpoint Readback")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@kepco.proto readSetpointCurrent $(PORT)")
    field(PREC, "3")
    field(EGU,  "A")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:CURRENT:SP:RBV")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "5.0 VAL")
}

record(ao, "$(P)CURRENT:SP") 
{
    field(DESC, "Current Setpoint")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@kepco.proto writeCurrent($(P)) $(PORT)")
    field(EGU, "A")
    #field(HOPR, "5.0")
    #field(LOPR, "0.01")    
    field(PREC, "3")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:CURRENT:SP PP")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "5.0 VAL")
}

record(ai, "$(P)VOLTAGE") 
{
    field(DESC, "Voltage")
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@kepco.proto readActualVoltage $(PORT)")
    field(PREC, "3")
    field(EGU,  "V")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VOLTAGE")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "5.0 VAL")
}

# Scan from here allows us to FLNK to readback if we need to trigger
# an extra update. These extra updates are only triggered in recsim mode - in normal mode we push
# an update from the protocol file whenever a new SP is sent.
record(bo, "$(P)VOLTAGE:SP:RBV:_SCAN") 
{
    field(SCAN, "1 second")
    field(FLNK, "$(P)VOLTAGE:SP:RBV")
}

record(ai, "$(P)VOLTAGE:SP:RBV") 
{
    field(DESC, "Voltage setpoint readback")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@kepco.proto readSetpointVoltage $(PORT)")
    field(PREC, "3")
    field(EGU,  "V")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VOLTAGE:SP:RBV")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "5.0 VAL")
}

record(ao, "$(P)VOLTAGE:SP") 
{
    field(DESC, "Voltage setpoint")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@kepco.proto writeVoltage($(P)) $(PORT)")
    field(EGU, "V")
    #field(HOPR, "5.0")
    #field(LOPR, "0.01")    
    field(PREC, "3")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VOLTAGE:SP PP")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "5.0 VAL")
}

# Scan from here allows us to FLNK to readback if we need to trigger
# an extra update. These extra updates are only triggered in recsim mode - in normal mode we push
# an update from the protocol file whenever a new SP is sent.
record(bo, "$(P)OUTPUTMODE:_SCAN") 
{
    field(SCAN, "1 second")
    field(FLNK, "$(P)OUTPUTMODE")
}

record(bi, "$(P)OUTPUTMODE") 
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@kepco.proto readOutputMode $(PORT)")
    field(ZNAM, "VOLTAGE")
    field(ONAM, "CURRENT")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:OUTPUTMODE")
    field(SDIS, "$(P)DISABLE")
}

record(bo, "$(P)OUTPUTMODE:SP") 
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@kepco.proto setOutputMode($(P)) $(PORT)")
    field(ZNAM, "VOLTAGE")
    field(ONAM, "CURRENT")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:OUTPUTMODE:SP PP")
    field(SDIS, "$(P)DISABLE")
}

alias("$(P)OUTPUTMODE", "$(P)OUTPUTMODE:SP:RBV")


# Scan from here allows us to FLNK to readback if we need to trigger
# an extra update. These extra updates are only triggered in recsim mode - in normal mode we push
# an update from the protocol file whenever a new SP is sent.
record(bo, "$(P)OUTPUTSTATUS:_SCAN") 
{
    field(SCAN, "1 second")
    field(FLNK, "$(P)OUTPUTSTATUS")
}

record(bi, "$(P)OUTPUTSTATUS") 
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@kepco.proto readOutputStatus $(PORT)")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:OUTPUTSTATUS")
    field(SDIS, "$(P)DISABLE")
    info(alarm, "KEPCO")
}

record(bo, "$(P)OUTPUTSTATUS:SP") 
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@kepco.proto setOutputStatus($(P)) $(PORT)")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:OUTPUTSTATUS:SP PP")
    field(SDIS, "$(P)DISABLE")
}

alias("$(P)OUTPUTSTATUS", "$(P)OUTPUTSTATUS:SP:RBV")

### SIMULATION RECORDS ###

record(ai, "$(P)SIM:CURRENT")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    
    # On real device, we update SP:RBV from the protocol whenever a new SP is sent.
    # This FLNK approximates this behaviour in recsim mode.
    # The muon ZF system requires fairly quick updates of setpoint readbacks after setting
    # setpoints, hence this extra complexity.
    field(FLNK, "$(P)CURRENT:SP:RBV")
}

alias("$(P)SIM:CURRENT","$(P)SIM:CURRENT:SP")

alias("$(P)SIM:CURRENT","$(P)SIM:CURRENT:SP:RBV")

record(bo, "$(P)SIM:REMOTE")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bi, "$(P)SIM:REMOTE:GET")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(stringin, "$(P)SIM:IDN")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(stringin, "$(P)SIM:RST")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(stringin, "$(P)SIM:RSTRSND")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)SIM:VOLTAGE")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    
    # On real device, we update SP:RBV from the protocol whenever a new SP is sent.
    # This FLNK approximates this behaviour in recsim mode.
    # The muon ZF system requires fairly quick updates of setpoint readbacks after setting
    # setpoints, hence this extra complexity.
    field(FLNK, "$(P)VOLTAGE:SP:RBV")
}

alias("$(P)SIM:VOLTAGE","$(P)SIM:VOLTAGE:SP")

alias("$(P)SIM:VOLTAGE","$(P)SIM:VOLTAGE:SP:RBV")

record(bi, "$(P)SIM:OUTPUTMODE")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(FLNK, "$(P)OUTPUTMODE")
}

alias("$(P)SIM:OUTPUTMODE","$(P)SIM:OUTPUTMODE:SP")

alias("$(P)SIM:OUTPUTMODE","$(P)SIM:OUTPUTMODE:SP:RBV")

record(bi, "$(P)SIM:OUTPUTSTATUS")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(FLNK, "$(P)OUTPUTSTATUS")
}

alias("$(P)SIM:OUTPUTSTATUS","$(P)SIM:OUTPUTSTATUS:SP")

alias("$(P)SIM:OUTPUTSTATUS","$(P)SIM:OUTPUTSTATUS:SP:RBV")

